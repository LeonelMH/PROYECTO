import time, pygame, speech_recognition as sr
import os

frases_detectadas = []
log_voz = []
activo = False
hilo_activo = False

frases_cansancio = [
    "estoy cansado",
    "necesito descansar",
    "no puedo m√°s",
    "no puedo mas",
    "me siento fatigado",
    "estoy agotado",
    "me siento exhausto",
    "ya no rindo",
    "me cuesta concentrarme",
    "tengo sue√±o",
    "me siento d√©bil",
    "me siento debil",
    "estoy adormilado",
    "no tengo energ√≠a",
    "no tengo energia",
    "me siento lento",
    "estoy abrumado",
    "me siento saturado",
    "necesito una pausa",
    "estoy quemado",
    "me siento sin fuerzas",
    "no estoy al cien",
    "no estoy al 100",
    "me siento distra√≠do"
]

frases_recuperacion = [
    "ya estoy bien",
    "me siento mejor",
    "ya descans√©",
    "ya descanse",
    "estoy despierto",
    "me siento renovado",
    "estoy listo",
    "me siento con energ√≠a",
    "ya me recuper√©",
    "ya me recupere",
    "me siento enfocado",
    "estoy al cien",
    "ya estoy al 100",
    "ya estoy activo",
    "me siento despejado",
    "estoy alerta",
    "ya estoy concentrado",
    "me siento motivado",
    "ya estoy de vuelta",
    "me siento presente",
    "estoy en forma",
    "ya pas√≥ el cansancio",
    "me siento estable"
]






def set_activo(valor):
    global activo
    activo = valor
    log_voz.append("üü¢ Captura iniciada" if valor else "üü° Captura detenida")

    if not valor:
        try:
            import pygame
            pygame.mixer.music.stop()
            log_voz.append("üîá Alarma detenida")
        except Exception as e:
            log_voz.append(f"‚ö†Ô∏è Error al detener alarma: {str(e)}")


def iniciar_lexico():
    pygame.mixer.init()
    ruta_audio = os.path.join(os.path.dirname(__file__), "..", "static", "Estoy cansado jefe.mp3")
    pygame.mixer.music.load(ruta_audio)


    r = sr.Recognizer()
    with sr.Microphone() as source:
        while True:
            if not activo:
                pygame.mixer.music.stop()  # üîá Detener alarma si est√° sonando
                time.sleep(1)
                continue

            log_voz.append(" Escuchando...")
            try:
                audio = r.listen(source, timeout=10)

                if not activo:
                    continue  # Evita procesar si se desactiv√≥ justo despu√©s de escuchar

                texto = r.recognize_google(audio, language="es-MX").lower()
                log_voz.append(f" Frase reconocida: {texto}")
                frases_detectadas.append(f"{time.strftime('%H:%M:%S')} ‚Üí {texto}")

                if any(f in texto for f in frases_cansancio):
                    log_voz.append("üî¥ Fatiga verbal detectada.")
                    pygame.mixer.music.play(-1)
                elif any(f in texto for f in frases_recuperacion):
                    log_voz.append("üü¢ Recuperaci√≥n verbal detectada.")
                    pygame.mixer.music.stop()
            except Exception as e:
                if activo:  # Solo mostrar error si la captura est√° activa
                    log_voz.append(f" Error al reconocer voz: {str(e)}")
            time.sleep(1)